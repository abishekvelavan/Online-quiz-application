{"version":3,"sources":["components/Questionnaire.jsx","components/Display.jsx","App.js","index.js"],"names":["Questionnaire","showAnswers","handleAnswer","handleNextQuestion","data","question","correct_answer","answers","className","style","backgroundColor","dangerouslySetInnerHTML","__html","map","answer","idx","textColor","onClick","Display","api","title","useState","questions","setQuestions","currentIndex","setCurrentIndex","score","setScore","setShowAnswers","useEffect","fetch","then","res","json","results","incorrect_answers","sort","Math","random","length","color","textAlign","paddingBottom","marginBottom","App","undefined","state","setState","Button","text","id","paddingTop","paddingLeft","paddingRight","fontSize","borderRadius","border","clickEvent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d43363c4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst Questionnaire = ({\r\n    showAnswers,\r\n    handleAnswer,\r\n    handleNextQuestion,\r\n    data: { question, correct_answer, answers }\r\n}) => {\r\n\r\n\r\n    return (\r\n        <div className='flex flex-col '>\r\n            {/* prints the questions*/}\r\n            <div className=\" text-black p-10 rounded shadow-md\" style={{ backgroundColor: '#7dced0' }}>\r\n                <h2\r\n                    className=\"text-2xl\"\r\n                    dangerouslySetInnerHTML={{ __html: question }}\r\n                />\r\n            </div>\r\n            <div className=\"grid grid-cols-2 gap-6 mt-6 \">\r\n                {answers.map((answer, idx) => {\r\n                    const textColor = showAnswers ?\r\n                        answer === correct_answer ?\r\n                            'text-green-700' : 'text-red-600' : 'text-black'\r\n\r\n                    //const textColor = showAnswers ? 'text-white' : 'text-black';\r\n\r\n                    return (\r\n                        <button\r\n                            key={idx}\r\n                            style={{ backgroundColor: '#7dced0' }}\r\n                            className={`kl-auto text-black ${textColor} p-4 font-semibold rounded shadow`}\r\n                            onClick={() => handleAnswer(answer)} answer={answer}\r\n                            dangerouslySetInnerHTML={{ __html: answer }}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n            {showAnswers && (\r\n                <button\r\n                    onClick={handleNextQuestion}\r\n                    className={`ml-auto mt-6  bg-white text-purple-800 p-4 font-semibold rounded shadow`}\r\n                >\r\n                    Next Question\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Questionnaire;\r\n","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Questionnaire from './Questionnaire';\r\n//import './App.css';\r\n//import { Questionnaire } from './components';\r\n//import Questionnaire from './Questionnaire';\r\n\r\n\r\nfunction Display({ api, title }) {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [showAnswers, setShowAnswers] = useState(false);\r\n    //const API_URL = `${api}`;\r\n\r\n    useEffect(() => {\r\n        fetch(`${api}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const questions = data.results.map((question) =>\r\n                ({\r\n                    ...question,\r\n                    answers: [\r\n                        question.correct_answer,\r\n                        ...question.incorrect_answers\r\n                    ].sort(() => Math.random() - 0.5\r\n                    ),\r\n                }));\r\n\r\n                setQuestions(questions);\r\n\r\n            });\r\n    }, []);\r\n\r\n    const handleAnswer = (answer) => {\r\n        //check for the answer, show the question and change the score\r\n        // loops through the question set\r\n        if (!showAnswers) {\r\n            if (answer === questions[currentIndex].correct_answer) {\r\n                setScore(score + 1)\r\n                //increase score\r\n            }\r\n        }\r\n\r\n        setShowAnswers(true);\r\n\r\n        //const newIndex = currentIndex + 1\r\n        //setCurrentIndex(newIndex)\r\n\r\n\r\n    };\r\n\r\n    const handleNextQuestion = () => {\r\n        setShowAnswers(false);\r\n\r\n        setCurrentIndex(currentIndex + 1);\r\n    }\r\n\r\n    return (questions.length > 0 ? (\r\n        <div className=\"container\">\r\n\r\n            {currentIndex >= questions.length ? (\r\n                <h1 className=\"text-3xl font-bold \"\r\n                    style={{\r\n                        color: '#7dced0',\r\n                        textAlign: 'center'\r\n                    }}\r\n                >\r\n                    Game ended! Your score is {score}\r\n                </h1>\r\n\r\n            ) : (\r\n                <>\r\n                    <header\r\n                        className=\"font-bold text-3xl \"\r\n                        style={{\r\n                            paddingBottom: 60,\r\n                            marginBottom: 10,\r\n                            textAlign: 'center',\r\n\r\n                        }}>\r\n                        {title}\r\n                    </header>\r\n                    <Questionnaire\r\n                        data={questions[currentIndex]}\r\n                        showAnswers={showAnswers}\r\n                        handleAnswer={handleAnswer}\r\n                        handleNextQuestion={handleNextQuestion} />\r\n                </>\r\n            )}\r\n        </div>\r\n    ) : (\r\n        <h3 className='font-bold'>Loading Please Wait</h3>\r\n    ))\r\n}\r\n\r\nexport default Display;\r\n","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n//import { Questionnaire } from './components';\nimport Display from './components/Display';\n//import { Button } from 'bootstrap';\n\n\n//const API_URL = 'https://opentdb.com/api.php?amount=10&category=9&type=multiple';\n\nfunction App() {\n  const [state, setState] = useState(undefined);\n\n\n  const Button = ({ text, id }) => {\n    return (\n      <button\n\n        className=\"text-black font-bold\"\n        style={{\n          paddingTop: 40,\n          paddingBottom: 40,\n          paddingLeft: 10,\n          paddingRight: 10,\n          fontSize: 20,\n          borderRadius: 20,\n          backgroundColor: '#7dced0',\n          border: 0,\n          textAlign: 'center',\n        }}\n        onClick={() => clickEvent(id)}>\n        {text}\n      </button>\n\n    )\n  }\n\n  function clickEvent(id) {\n    setState(id);\n\n\n  }\n\n  return (state === '1' ? <Display api={'https://opentdb.com/api.php?amount=10&category=9&type=multiple'} title={'General Knowledge'} /> :\n    (state === '2' ? <Display api={'https://opentdb.com/api.php?amount=10&category=17&type=multiple'} title={'Ecology'} /> :\n      state === '3' ? <Display api={'https://opentdb.com/api.php?amount=10&category=18&type=multiple'} title={'Computer Science'} /> :\n        state === '4' ? <Display api={'https://opentdb.com/api.php?amount=10&category=19&type=multiple'} title={'Mathematics'} /> :\n          state === '5' ? <Display api={'https://opentdb.com/api.php?amount=10&category=22&type=multiple'} title={'Geography'} /> :\n            state === '6' ? <Display api={'https://opentdb.com/api.php?amount=10&category=23&type=multiple'} title={'History'} /> :\n              (\n                <><header className=\"font-bold text-3xl\"\n                  style={{ textAlign: 'center', paddingBottom: 10 }}>\n                  Choose your category</header>\n                  <div className=\"grid grid-cols-2 gap-6 mt-6\" >\n                    <Button text='General Knowledge' id='1' onClick={clickEvent} />\n                    <Button text='Ecology' id='2' onClick={clickEvent} />\n                    <Button text='Computer Science' id='3' onClick={clickEvent} />\n                    <Button text='Mathematics' id='4' onClick={clickEvent} />\n                    <Button text='Geography' id='5' onClick={clickEvent} />\n                    <Button text='History' id='6' onClick={clickEvent} />\n                  </div>\n                </>\n              )\n\n    ))\n}\nexport default App;\n//{/*<Display api={'https://opentdb.com/api.php?amount=10&category=9&type=multiple'}  title = {/>*/}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}