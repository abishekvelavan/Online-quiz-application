{"version":3,"sources":["firebase.js","contexts/AuthContexts.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","EACT_APP_FIREBASE_AUTH_DOMAIN","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","confirmpasswordRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","Body","class","Alert","variant","className","alt","src","Form","onSubmit","Group","id","Control","type","ref","required","placeholder","classNAme","Button","disabled","to","Dashboard","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","all","then","catch","finally","defaultValue","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f58a04ec.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firebase-auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.EACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID ,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\nexport const auth = app.auth()\r\n export default app","import React, { useContext, useState,useEffect } from 'react'\r\nimport { auth } from '../firebase'\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth(){\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({children }) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n\r\n    function login(email, password){\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function signup(email, password){\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logout(){\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email){\r\n        return auth.sendPasswordResetEmail(email)\r\n\r\n    }\r\n\r\n    function updateEmail(email){\r\n        return auth.currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password){\r\n        return auth.currentUser.updatePassword(password)\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n            \r\n        } )\r\n\r\n        return unsubscribe\r\n    }, )\r\n    \r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from '../contexts/AuthContexts'\r\nimport './Sign_up.css'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\n\r\nexport default function Signup() {\r\n    \r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const confirmpasswordRef = useRef()\r\n    const {signup} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n     async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(passwordRef.current.value !== \r\n        confirmpasswordRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to Create an Account')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body class=\"container\">\r\n                    <h1>Sign Up</h1>\r\n                    {error && <Alert variant=\"danger\"> {error} </Alert>}\r\n                    <img className=\"logo\" alt=\"Social Vue\" src=\"https://raw.githubusercontent.com/abishekvelavan/Online-quiz-application/main/quizoid%20logo%404x-8.png\" />\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Control type=\"email\" ref={emailRef} required placeholder=\"Email\"/>\r\n                            </Form.Group>\r\n                            <Form.Group id=\"password\">\r\n                                <Form.Control classNAme=\"input\" type=\"password\" ref={passwordRef} required placeholder=\"Password\"/>\r\n                            </Form.Group>\r\n                            <Form.Group id=\"confirmpassword\">\r\n                                <Form.Control type=\"password\" ref={confirmpasswordRef} required placeholder=\"Confirm Password\"/>\r\n                            </Form.Group>\r\n                        <Button disabled={loading} className=\"btn\" type=\"submit\">Sign Up</Button>\r\n                    </Form>\r\n                    <div className=\"foot\">\r\n                        Already have an account? <Link to=\"/login\" className=\"links\">Log In</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport {Card, Button, Alert } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {useAuth} from '../contexts/AuthContexts'\r\nimport './Sign_up.css'\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState(\"\")\r\n    const {currentUser, logout} = useAuth()\r\n    const history = useHistory()\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n\r\n        }catch {\r\n            setError('Failed to log out')\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Card>\r\n            <Card.Body>\r\n                <h1>DashBoard-Profile</h1>\r\n                {error && <Alert variant=\"danger\"> {error} </Alert>}\r\n                <p className=\"foot\"><strong>Email: </strong>{currentUser.email}</p>\r\n                <Link to=\"update-profile\" className=\"btn\">\r\n                    Update Profile\r\n                </Link>\r\n            </Card.Body>\r\n        </Card>\r\n        <div className=\"foot\">\r\n            <Button className=\"btn\" variant=\"link\" onClick={handleLogout}>\r\n                Log Out\r\n            </Button>\r\n        </div>\r\n      </>  \r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from '../contexts/AuthContexts'\r\nimport './Sign_up.css'\r\nimport {Link, useHistory } from 'react-router-dom'\r\n\r\n\r\nexport default function Login() {\r\n    \r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const {login} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n     async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to log in')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body class=\"container\">\r\n                    <h1>Log In</h1>\r\n                    {error && <Alert variant=\"danger\"> {error} </Alert>}\r\n                    <img className=\"logo\" alt=\"Social Vue\" src=\"https://raw.githubusercontent.com/abishekvelavan/Online-quiz-application/main/quizoid%20logo%404x-8.png\" />\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Control type=\"email\" ref={emailRef} required placeholder=\"Email\"/>\r\n                            </Form.Group>\r\n                            <Form.Group id=\"password\">\r\n                                <Form.Control classNAme=\"input\" type=\"password\" ref={passwordRef} required placeholder=\"Password\"/>\r\n                            </Form.Group>\r\n                        <Button disabled={loading} className=\"btn\" type=\"submit\">Log In</Button>\r\n                    </Form>\r\n                    <div className=\"foot\">\r\n                        <Link to=\"/forgot-password\">Forgot Password? </Link>\r\n                    </div>\r\n                    <div className=\"foot\">\r\n                        Need an account? <Link to=\"/signup\" className=\"links\">Sign Up</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            \r\n        </>      \r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport {useAuth} from \"../contexts/AuthContexts\"\r\n\r\nexport default function PrivateRoute( {component: Component,...rest }) {\r\n\r\n    const { currentUser } = useAuth()\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render = {props => {\r\n                return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n            }} \r\n        ></Route>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from '../contexts/AuthContexts'\r\nimport './Sign_up.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function ForgotPassword() {\r\n    \r\n    const emailRef = useRef()\r\n    const {resetPassword} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n     async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check Your Inbox for further Instructions')\r\n        } catch {\r\n            setError('Failed to Reset Password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body class=\"container\">\r\n                    <h1>Password Reset</h1>\r\n                    {error && <Alert variant=\"danger\"> {error} </Alert>}\r\n                    {message && <Alert variant=\"sucess\"> {message} </Alert>}\r\n                    <img className=\"logo\" alt=\"Social Vue\" src=\"https://raw.githubusercontent.com/abishekvelavan/Online-quiz-application/main/quizoid%20logo%404x-8.png\" />\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Control type=\"email\" ref={emailRef} required placeholder=\"Email\"/>\r\n                            </Form.Group>\r\n                        <Button disabled={loading} className=\"btn\" type=\"submit\">\r\n                            Reset Password\r\n                        </Button>\r\n                    </Form>\r\n                    <div className=\"foot\">\r\n                        <Link to=\"/login\">Log In? </Link>\r\n                    </div>\r\n                    <div className=\"foot\">\r\n                        Need an account? <Link to=\"/signup\" className=\"links\">Sign Up</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            \r\n        </>      \r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from '../contexts/AuthContexts'\r\nimport './Sign_up.css'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\n\r\nexport default function UpdateProfile() {\r\n    \r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const confirmpasswordRef = useRef()\r\n    const {currentUser, updatePassword, updateEmail} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(passwordRef.current.value !== \r\n        confirmpasswordRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises =[]\r\n        if (emailRef.current.value!==currentUser.email){\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        \r\n        if(passwordRef.current.value){\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n\r\n        promises.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch(() =>{\r\n            setError('Failed to Update Account')\r\n        }).finally(() => {\r\n            setLoading(\"false\")\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body class=\"container\">\r\n                    <h1>Update Profile</h1>\r\n                    {error && <Alert variant=\"danger\"> {error} </Alert>}\r\n                    <img className=\"logo\" alt=\"Social Vue\" src=\"https://raw.githubusercontent.com/abishekvelavan/Online-quiz-application/main/quizoid%20logo%404x-8.png\" />\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Control type=\"email\" ref={emailRef} required placeholder=\"Email\" defaultValue={currentUser.email}/>\r\n                            </Form.Group>\r\n                            <Form.Group id=\"password\">\r\n                                <Form.Control classNAme=\"input\" type=\"password\" ref={passwordRef} placeholder=\"Leave Blank to keep the Same\"/>\r\n                            </Form.Group>\r\n                            <Form.Group id=\"confirmpassword\">\r\n                                <Form.Control type=\"password\" ref={confirmpasswordRef} placeholder=\"Leave Blank to keep the Same\"/>\r\n                            </Form.Group>\r\n                        <Button disabled={loading} className=\"btn\" type=\"submit\">Sign Up</Button>\r\n                    </Form>\r\n                    <div className=\"foot\">\r\n                        <Link to=\"/\" className=\"links\">Cancel</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\nimport { AuthProvider } from \"../contexts/AuthContexts\";\nimport Signup from \"./Signup.js\";\nimport{ BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport Dashboard from \"./Dashboard\"\nimport Login from \"./Login\"\nimport PrivateRoute from \"./PrivateRoute\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport UpdateProfile from \"./UpdateProfile\";\n\nfunction App() {\n  return (\n    \n      <Router>\n        <AuthProvider>\n          <Switch>\n            <PrivateRoute exact path = \"/\" component={Dashboard} />\n            <PrivateRoute path = \"/update-profile\" component={UpdateProfile} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\n          </Switch>\n        </AuthProvider> \n      </Router>\n      \n  )\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './components/Sign_up.css'\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}