{"version":3,"sources":["components/firebase.js","components/contexts/GlobalContext.js","components/Authentication/PrivateRoute.js","components/Authentication/Dashboard.js","components/Quiz/DisplayLeaderBoard.jsx","components/Quiz/ChooseLeaderBoard.jsx","components/Quiz/Questionnaire.jsx","components/Quiz/Display.jsx","components/Quiz/Categories.jsx","components/Authentication/UpdateProfile.js","components/Authentication/Signup.js","components/Authentication/Login.js","components/Authentication/ForgotPassword.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","ddatabaseURL","REACT_APP_DATABASEURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","GlobalContext","createContext","GlobalProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","email","password","a","signInWithEmailAndPassword","value","createUserWithEmailAndPassword","signOut","sendPasswordResetEmail","updateEmail","updatePassword","useEffect","onAuthStateChanged","user","Provider","login","signup","logout","resetPassword","PrivateRoute","Component","component","rest","useContext","render","props","to","Dashboard","error","setError","history","useHistory","UserName","slice","indexOf","handleLogout","push","window","$uName","className","alt","src","Card","Body","Alert","class","variant","style","textDecoration","onClick","DisplayLeaderBoard","tableName","userData","setuserData","name","database","ref","on","response","data","val","userInfo","id","userName","userScore","data_","sort","sortData","length","reverse","el1","el2","rowStyle","marginLeft","marginRight","paddingRight","paddingLeft","margin","border","textAlign","headerStyle","marginTop","map","index","parseInt","ChooseLeaderBoard","category","setCategory","DropDownMenu","options","event","category_state","target","width","backgroundColor","borderRadius","padding","onChange","op","marginBottom","color","fontWeight","Questionnaire","showAnswers","handleAnswer","handleNextQuestion","question","correct_answer","answers","dangerouslySetInnerHTML","__html","answer","idx","textColor","Display","api","questions","setQuestions","currentIndex","setCurrentIndex","score","setScore","setShowAnswers","fetch","then","res","json","results","incorrect_answers","Math","random","buttonStyle","paddingTop","paddingBottom","uploadScore","console","log","firestore","message","alignText","justifyContent","fontSize","Categories","undefined","state","setState","Button","text","bg","clickEvent","UpdateProfile","emailRef","useRef","passwordRef","confirmpasswordRef","formStyle","Form","onSubmit","e","preventDefault","current","promises","Promise","all","catch","finally","Group","Control","type","required","placeholder","defaultValue","disabled","Signup","pattern","title","Login","classNAme","ForgotPassword","setMessage","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.822d22b4.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n// import \"firebase/firebase-auth\"\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    ddatabaseURL: process.env.REACT_APP_DATABASEURL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n})\r\n\r\n\r\nexport const auth = app.auth()\r\n\r\nexport default app","import React, { createContext, useState, useEffect } from 'react'\r\nimport { auth } from '../firebase'\r\n\r\n\r\n\r\nexport const GlobalContext = createContext();\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    async function login(email, password) {\r\n        let value = await auth.signInWithEmailAndPassword(email, password)\r\n        return value\r\n    }\r\n\r\n    async function signup(email, password) {\r\n        return await auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    async function logout() {\r\n        return await auth.signOut()\r\n    }\r\n\r\n    async function resetPassword(email) {\r\n        return await auth.sendPasswordResetEmail(email)\r\n\r\n    }\r\n\r\n    async function updateEmail(email) {\r\n        return await auth.currentUser.updateEmail(email)\r\n    }\r\n\r\n    async function updatePassword(password) {\r\n        return await auth.currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n        return unsubscribe\r\n    })\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            currentUser,\r\n            login,\r\n            signup,\r\n            logout,\r\n            resetPassword,\r\n            updateEmail,\r\n            updatePassword,\r\n        }}>\r\n            {!loading && children}\r\n        </GlobalContext.Provider>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n// import { useAuth } from \"../contexts/AuthContexts\"\r\nimport { GlobalContext } from '../contexts/GlobalContext';\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n\r\n    const { currentUser } = useContext(GlobalContext)\r\n\r\n    return (\r\n        <Route\r\n\r\n            {...rest}\r\n            render={props => {\r\n                return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n            }}\r\n\r\n        ></Route>\r\n    )\r\n}","import React, { useContext, useState } from 'react'\r\nimport { Card, Button, Alert } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { GlobalContext } from '../contexts/GlobalContext'\r\nimport './Sign_up.css'\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState(\"\")\r\n    const { currentUser, logout } = useContext(GlobalContext)\r\n    const history = useHistory()\r\n    // const firstDigit = currentUser.email.match(/\\d/) // will give you the first digit in the string\r\n    // const indexed = currentUser.email.indexOf(firstDigit)\r\n    // const UserName = currentUser.email.slice(0, indexed)\r\n    const UserName = currentUser.email.slice(0, currentUser.email.indexOf('@'))\r\n    // if (UserName.length === 0) {\r\n    //     const UserName = currentUser.email.slice(0, currentUser.email.indexOf('@'))\r\n    // }\r\n    window.$uName = UserName;\r\n\r\n    async function handleLogout() {\r\n        setError('')\r\n\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n\r\n        } catch {\r\n            setError('Failed to log out')\r\n\r\n        }\r\n\r\n    }\r\n    // const buttonStyle = {\r\n    //     // paddingTop: 20,\r\n    //     // paddingBottom: 20,\r\n    //     // borderRadius: 10,\r\n    //     // color: 'black',\r\n    //     // backgroundColor: '#7dced0',\r\n    //     // fontWeight: '500',\r\n    //     // textDecoration: 'none',\r\n    //     // textAlign: 'center',\r\n    // }\r\n\r\n\r\n    function userInfo() {\r\n        return (\r\n            <>\r\n                <img className=\"logo\" alt=\"Social Vue\" src=\"https://raw.githubusercontent.com/abishekvelavan/Online-quiz-application/main/quizoid%20logo%404x-8.png\" />\r\n\r\n                <Card className=\"topcon\">\r\n                    <h2>Hi, {window.$uName}</h2>\r\n\r\n                    <Card.Body >\r\n\r\n                        <h1>DashBoard-Profile</h1>\r\n\r\n                        {error && <Alert class=\"alerts\" variant=\"danger\"> {error} </Alert>}\r\n                        {/* <p className=\"foot\"><strong>Email: </strong>{currentUser.email}</p> */}\r\n\r\n                        <Link to=\"update-profile\" className=\"btn\">\r\n                            Update Profile\r\n                        </Link>\r\n\r\n                        <div className=\"foot\">\r\n                            <Button className=\"btn\" style={{ textDecoration: 'none', }} variant=\"link\" onClick={handleLogout}>\r\n                                Log Out\r\n                            </Button>\r\n\r\n                            <Link\r\n                                to='/Categories'\r\n                                className='btn' >\r\n                                Categories\r\n                            </Link>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        userInfo()\r\n    )\r\n\r\n}","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport firebase from '../firebase';\r\nimport RotateLoader from \"react-spinners/RotateLoader\";\r\n//import { useParams } from 'react-router-dom';\r\n\r\nconst DisplayLeaderBoard = ({ tableName }) => {\r\n    const [userData, setuserData] = useState([]);\r\n    const name = `/${tableName}`;\r\n    //console.log(name);\r\n\r\n    useEffect(() => {\r\n        const firestore = firebase.database().ref(name);\r\n        const values = firestore;\r\n        values.on('value', (response) => {\r\n            const data = response.val();\r\n            let userInfo = [];\r\n            for (let id in data) {\r\n                userInfo.push({\r\n                    id: id,\r\n                    userName: data[id].userName,\r\n                    userScore: data[id].userScore,\r\n                    //category: data[id].category,\r\n                })\r\n            }\r\n\r\n            let data_ = userInfo.sort(sortData);\r\n            setuserData(data_.slice(data_.length - 10, data_.length).reverse());\r\n        })\r\n    }, [name])\r\n\r\n    /**\r\n     * This acts as a comparision function\r\n     * @param {Object} el1 \r\n     * @param {Object} el2 \r\n     * @returns {Number}\r\n     */\r\n    const sortData = (el1, el2) => {\r\n        return (el1.userScore - el2.userScore);\r\n    }\r\n\r\n    const rowStyle = {\r\n        marginLeft: '5rem',\r\n        marginRight: '5rem',\r\n        paddingRight: '3rem',\r\n        paddingLeft: '3rem',\r\n        margin: '20rem',\r\n        border: '1px solid #7dced0',\r\n        textAlign: 'center',\r\n        // backgroundColor: '#7dced0',\r\n        // borderRadius: '10',\r\n\r\n    }\r\n\r\n    const headerStyle = {\r\n        textAlign: 'center',\r\n        border: '1px solid #7dced0',\r\n\r\n        // backgroundColor: '#7dced0',\r\n        // borderRadius: '10',\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (userData.length === 0 ? (<div className='flex justify-center items-center h-screen'><RotateLoader /></div>) :\r\n        (\r\n            <div style={{\r\n                textAlign: 'center',\r\n\r\n            }}>\r\n\r\n                {/* <div className='flex justify-center items-center pt-4 '>\r\n                    <h2>{tableName}</h2>\r\n                </div> */}\r\n                <table className=\"table-auto text-xl \" style={{\r\n                    border: '1px solid #7dced0',\r\n                    marginTop: '2rem',\r\n\r\n\r\n                }}>\r\n                    <thead>\r\n                        <tr className='bg-blue-200 '>\r\n                            <th style={headerStyle}>Position</th>\r\n                            <th style={headerStyle}>Name </th>\r\n                            {/*<th style={headerStyle}>Category </th> */}\r\n                            <th style={headerStyle}>Score </th>\r\n                        </tr>\r\n                    </thead>\r\n                    {\r\n                        userData.map((data, index) => {\r\n                            return <tbody>\r\n                                <tr className='bg-blue-200'>\r\n                                    <td style={rowStyle}> {parseInt(index) + 1}</td>\r\n                                    <td style={rowStyle}> {data.userName} </td>\r\n                                    {/*<td style={rowStyle}> {data.category} </td> */}\r\n                                    <td style={rowStyle}> {data.userScore} </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        })\r\n                    }\r\n\r\n                </table>\r\n            </div >\r\n        )\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default DisplayLeaderBoard;\r\n","import React, { useState } from 'react';\r\nimport DisplayLeaderBoard from './DisplayLeaderBoard';\r\nimport { Link } from 'react-router-dom';\r\n//import { Dropdown, Selection } from 'react-dropdown';\r\n\r\nconst ChooseLeaderBoard = () => {\r\n    const [category, setCategory] = useState(0);\r\n\r\n    const DropDownMenu = () => {\r\n        let options = ['General Knowledge', 'Ecology', 'Computer Science',\r\n            'Maths', 'Geographical Science', 'History',\r\n            'Sports', 'Ancient Mythology', 'Films and Series',\r\n            'Musicals', 'Video Games', 'Books and Novels',\r\n            'Board Games', 'Biological Science', 'Comics', 'Cartoons and Anime'];\r\n\r\n        const dropDownStyle = {\r\n            width: '15rem',\r\n            textAlign: 'center',\r\n            backgroundColor: '#7dced0',\r\n            borderRadius: 10,\r\n            padding: '0.5rem',\r\n            border: '1px solid black',\r\n\r\n        }\r\n\r\n        async function handleChange(event) {\r\n            // setCategory(index);\r\n            // event.preventDefault();\r\n\r\n            // This will set the index of the value passed from the options array\r\n\r\n            // Modifying the default state, and apply.\r\n            let category_state = category\r\n            category_state = options.indexOf(event.target.value)\r\n            setCategory(category_state)\r\n            //console.log(options.indexOf(event.target.value))\r\n\r\n            // Another best option is to use them directly and render them with a switch statement.\r\n        }\r\n\r\n        return (\r\n            <select style={dropDownStyle} onChange={handleChange} value={options[category]}>\r\n                {options.map((op, index) => {\r\n                    return (\r\n                        <option value={op} key={index} >{op}</option>\r\n                    )\r\n                })}\r\n            </select>\r\n        )\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            marginTop: '2rem',\r\n            marginLeft: '2rem',\r\n            marginRight: '2rem',\r\n        }}>\r\n            <div style={{\r\n                marginLeft: '5rem',\r\n            }}>\r\n                <DropDownMenu />\r\n\r\n            </div>\r\n            <div style={{\r\n                marginTop: '2rem',\r\n                marginBottom: '2rem',\r\n            }}>\r\n                {(category === 0 ? <DisplayLeaderBoard tableName='General Knowledge' /> :\r\n                    category === 1 ? <DisplayLeaderBoard tableName='Ecology' /> :\r\n                        category === 2 ? <DisplayLeaderBoard tableName='Computer Science' /> :\r\n                            category === 3 ? <DisplayLeaderBoard tableName='Maths' /> :\r\n                                category === 4 ? <DisplayLeaderBoard tableName='Geographical Science' /> :\r\n                                    category === 5 ? <DisplayLeaderBoard tableName='History' /> :\r\n                                        category === 6 ? <DisplayLeaderBoard tableName='Sports' /> :\r\n                                            category === 7 ? <DisplayLeaderBoard tableName='Ancient Mythology' /> :\r\n                                                category === 8 ? <DisplayLeaderBoard tableName='Films and Series' /> :\r\n                                                    category === 9 ? <DisplayLeaderBoard tableName='Musicals' /> :\r\n                                                        category === 10 ? <DisplayLeaderBoard tableName='Video Games' /> :\r\n                                                            category === 11 ? <DisplayLeaderBoard tableName='Books and Novels' /> :\r\n                                                                category === 12 ? <DisplayLeaderBoard tableName='Board Games' /> :\r\n                                                                    category === 13 ? <DisplayLeaderBoard tableName='Biological Science' /> :\r\n                                                                        category === 14 ? <DisplayLeaderBoard tableName='Comics' /> :\r\n                                                                            category === 15 ? <DisplayLeaderBoard tableName='Cartoons and Anime' /> :\r\n                                                                                null)}\r\n            </div>\r\n\r\n            <div className='flex justify-center items-center gap-4'>\r\n\r\n                <Link to='/categories'\r\n                    style={{\r\n                        padding: '1rem 1rem',\r\n                        borderRadius: 10,\r\n                        color: 'black',\r\n                        backgroundColor: '#7dced0',\r\n                        fontWeight: '500',\r\n                        textDecoration: 'none',\r\n                        textAlign: 'center',\r\n                        //border: '0px solid black',\r\n                    }} >\r\n                    Retake Quiz\r\n                </Link>\r\n\r\n                <Link\r\n                    to='/'\r\n                    style={{\r\n                        padding: '1rem 1rem',\r\n                        borderRadius: 10,\r\n                        color: 'black',\r\n                        backgroundColor: '#7dced0',\r\n                        fontWeight: '500',\r\n                        textDecoration: 'none',\r\n                        textAlign: 'center',\r\n                    }}>\r\n                    Dashboard\r\n                </Link>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChooseLeaderBoard","import React from 'react';\r\n\r\nconst Questionnaire = ({\r\n    showAnswers,\r\n    handleAnswer,\r\n    handleNextQuestion,\r\n    data: { question, correct_answer, answers }\r\n}) => {\r\n\r\n    return (\r\n        <div className='flex flex-col'\r\n        >\r\n            {/* prints the questions*/}\r\n            <div\r\n                className=\" text-black p-10 rounded shadow-md\"\r\n                style=\r\n                {{\r\n                    backgroundColor: '#7dced0',\r\n                }}>\r\n                <h2\r\n                    className=\"text-2xl\"\r\n                    dangerouslySetInnerHTML={{ __html: question }}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-2 gap-6 mt-6 \">\r\n                {answers.map((answer, idx) => {\r\n                    const textColor = showAnswers ?\r\n                        answer === correct_answer ?\r\n                            'text-green-700' : 'text-red-600' : 'text-black'\r\n\r\n                    //const textColor = showAnswers ? 'text-white' : 'text-black';\r\n\r\n                    return (\r\n                        <button\r\n                            key={idx}\r\n                            style={{ backgroundColor: '#7dced0' }}\r\n                            className={`kl-auto text-black ${textColor} p-4 font-semibold rounded shadow`}\r\n                            onClick={() => handleAnswer(answer)} answer={answer}\r\n                            dangerouslySetInnerHTML={{ __html: answer }}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n            {showAnswers && (\r\n                <button\r\n                    onClick={handleNextQuestion}\r\n                    className={`ml-auto mt-6 bg-white text-purple-800 p-4 font-semibold rounded shadow`} >\r\n                    Next Question\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Questionnaire;\r\n","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Questionnaire from './Questionnaire';\r\nimport RotateLoader from \"react-spinners/RotateLoader\";\r\nimport firebase from '../firebase'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Display({ name, api }) {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [showAnswers, setShowAnswers] = useState(false);\r\n    // const n = window.$uName\r\n    const tableName = `/${name}`;\r\n    //const [cate, setCate] = useState({ name });\r\n\r\n    //const API_URL = `${api}`;\r\n    // const name = window.$userName\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`${api}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const questions = data.results.map((question) =>\r\n                ({\r\n                    ...question,\r\n                    answers: [\r\n                        question.correct_answer,\r\n                        ...question.incorrect_answers\r\n                    ].sort(() => Math.random() - 0.5\r\n                    ),\r\n                }));\r\n\r\n                setQuestions(questions);\r\n\r\n            });\r\n    }, [api]);\r\n\r\n    const handleAnswer = (answer) => {\r\n        //check for the answer, show the question and change the score\r\n        // loops through the question set\r\n        if (!showAnswers) {\r\n            if (answer === questions[currentIndex].correct_answer) {\r\n                setScore(score + 1)\r\n                //increase score\r\n            }\r\n        }\r\n        setShowAnswers(true);\r\n\r\n        //const newIndex = currentIndex + 1\r\n        //setCurrentIndex(newIndex)\r\n\r\n    };\r\n\r\n    const handleNextQuestion = () => {\r\n        setShowAnswers(false);\r\n        let curr_index = currentIndex + 1;\r\n        if (curr_index >= questions.length) {\r\n            uploadScore();\r\n        }\r\n        setCurrentIndex(currentIndex + 1);\r\n    }\r\n\r\n    const buttonStyle = {\r\n        paddingTop: 20,\r\n        paddingLeft: 3,\r\n        paddingRight: 3,\r\n        paddingBottom: 20,\r\n        borderRadius: 10,\r\n        color: 'black',\r\n        backgroundColor: '#7dced0',\r\n        fontWeight: '500',\r\n        textDecoration: 'none',\r\n        textAlign: 'center',\r\n    }\r\n\r\n\r\n    //console.log('tableName', tableName)\r\n\r\n\r\n\r\n    const uploadScore = async () => {\r\n        try {\r\n            console.log('logged in upload Data');\r\n            const firestore = firebase.database().ref(tableName);\r\n            let data = {\r\n                userName: window.$uName,\r\n                //category: name,\r\n                userScore: score,\r\n            };\r\n            await firestore.push(data);\r\n            console.log('pushed the data');\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    }\r\n\r\n    const alignText = {\r\n        textAlign: 'center',\r\n        Display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: '8rem',\r\n    }\r\n\r\n\r\n    return (questions.length > 0 ? (\r\n\r\n        <div className=\"container\" style={alignText}>\r\n\r\n            {currentIndex >= questions.length ? (\r\n                <>\r\n                    <h2 className=\"text-3xl font-bold\"\r\n                        style={{\r\n                            color: '#7dced0',\r\n                            textAlign: 'center',\r\n                            marginBottom: '2rem',\r\n                            marginTop: '5rem',\r\n\r\n\r\n                        }}\r\n                    >\r\n                        Game ended! Your score in {name} is {score}\r\n                    </h2>\r\n\r\n                    <div\r\n                        className=\"flex flex-col gap-4\"\r\n                        style={{\r\n                            fontSize: 20,\r\n                        }}>\r\n\r\n                        <div className='grid grid-cols-2 gap-3 mt-6'>\r\n\r\n\r\n                            <Link\r\n                                to='/'\r\n                                style={buttonStyle}>\r\n                                Dashboard\r\n                            </Link>\r\n\r\n                            {/* <Link\r\n                            to='/Categories'\r\n                            style={buttonStyle} >\r\n                            Back to Categories\r\n                        </Link> */}\r\n\r\n                            <Link\r\n                                to='/ChooseLeaderBoard'\r\n                                style={buttonStyle}>\r\n                                LeaderBoard\r\n                            </Link>\r\n\r\n                        </div>\r\n                    </div>\r\n                    {/* {uploadScore()} */}\r\n                </>\r\n            ) : (\r\n                <>\r\n                    {/*} <header\r\n                        className=\"font-bold text-3xl \"\r\n                        style={{\r\n                            paddingBottom: 60,\r\n                            marginBottom: 10,\r\n                            textAlign: 'center',\r\n                        }}>\r\n                        {title}\r\n                    </header> */}\r\n                    <Questionnaire\r\n                        style={alignText}\r\n                        data={questions[currentIndex]}\r\n                        showAnswers={showAnswers}\r\n                        handleAnswer={handleAnswer}\r\n                        handleNextQuestion={handleNextQuestion} />\r\n\r\n                </>\r\n            )}\r\n        </div>\r\n\r\n    ) : (\r\n        //<h3 className='font-bold'>Loading Please Wait</h3>\r\n        <div className='flex justify-center items-center h-screen'>\r\n            <RotateLoader />\r\n        </div>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Display;\r\n","import React, { useState } from 'react';\r\nimport Display from './Display';\r\n\r\n//Displays the categpries for the user to choose from\r\n\r\nfunction Categories() {\r\n    const [state, setState] = useState(undefined);\r\n\r\n\r\n\r\n    //buttons for categories\r\n    const Button = ({ id, text, bg }) => {\r\n        return (\r\n            <button\r\n                className=\"text-black px-8\"\r\n                style={{\r\n                    paddingTop: 25,\r\n                    paddingBottom: 25,\r\n                    paddingLeft: 20,\r\n                    paddingRight: 20,\r\n                    fontSize: 20,\r\n                    borderRadius: 10,\r\n                    backgroundColor: `${bg}`,\r\n                    border: 0,\r\n                    textAlign: 'center',\r\n                    fontWeight: '600',\r\n                }}\r\n                onClick={() => clickEvent(id, text)}\r\n            >\r\n                {text}\r\n            </button>\r\n\r\n        )\r\n    }\r\n\r\n    function clickEvent(id) {\r\n        setState(id);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (state === '1' ?\r\n        <Display\r\n            name='General Knowledge'\r\n            api={'https://opentdb.com/api.php?amount=10&category=9&type=multiple'} />\r\n        : (state === '2' ?\r\n            <Display\r\n                name='Ecology'\r\n                api={'https://opentdb.com/api.php?amount=10&category=17&type=multiple'} />\r\n            : state === '3' ?\r\n                <Display\r\n                    name='Computer Science'\r\n                    api={'https://opentdb.com/api.php?amount=10&category=18&type=multiple'} />\r\n                : state === '4' ?\r\n                    <Display\r\n                        name='Maths'\r\n                        api={'https://opentdb.com/api.php?amount=10&category=19&type=multiple'} />\r\n                    : state === '5' ?\r\n                        <Display\r\n                            name='Geographical Science'\r\n                            api={'https://opentdb.com/api.php?amount=10&category=22&type=multiple'} />\r\n                        : state === '6' ?\r\n                            <Display\r\n                                name='History'\r\n                                api={'https://opentdb.com/api.php?amount=10&category=23&type=multiple'} />\r\n                            : state === '7' ?\r\n                                <Display\r\n                                    name='Sports'\r\n                                    api={'https://opentdb.com/api.php?amount=10&category=21&type=multiple'} />\r\n                                : state === '8' ?\r\n                                    <Display\r\n                                        name='Ancient Mythology'\r\n                                        api={'https://opentdb.com/api.php?amount=10&category=20&type=multiple'} />\r\n                                    : state === '9' ?\r\n                                        <Display\r\n                                            name='Films and Series'\r\n                                            api={'https://opentdb.com/api.php?amount=10&category=11&type=multiple'} />\r\n                                        : state === '10' ?\r\n                                            <Display\r\n                                                name='Musicals'\r\n                                                api={'https://opentdb.com/api.php?amount=10&category=12&type=multiple'} />\r\n                                            : state === '11' ?\r\n                                                <Display\r\n                                                    name='Video Games'\r\n                                                    api={'https://opentdb.com/api.php?amount=10&category=15&type=multiple'} />\r\n                                                : state === '12' ?\r\n                                                    <Display\r\n                                                        name='Books and Novels'\r\n                                                        api={'https://opentdb.com/api.php?amount=10&category=10&type=multiple'} />\r\n                                                    : state === '13' ?\r\n                                                        <Display\r\n                                                            name='Board Games'\r\n                                                            api={'https://opentdb.com/api.php?amount=10&category=16&type=multiple'} />\r\n                                                        : state === '14' ?\r\n                                                            <Display\r\n                                                                name='Biological Science'\r\n                                                                api={'https://opentdb.com/api.php?amount=10&category=27&type=multiple'} />\r\n                                                            : state === '15' ?\r\n                                                                <Display\r\n                                                                    name='Comics'\r\n                                                                    api={'https://opentdb.com/api.php?amount=10&category=29&type=multiple'} />\r\n                                                                : state === '16' ?\r\n                                                                    <Display\r\n                                                                        name='Cartoons and Anime'\r\n                                                                        api={'https://opentdb.com/api.php?amount=10&category=32&type=multiple'} />\r\n                                                                    :\r\n                                                                    (\r\n                                                                        <><header\r\n                                                                            className=\"font-bold text-4xl pt-3 \"\r\n                                                                            style={{\r\n                                                                                textAlign: 'center',\r\n                                                                                color: '#7dced0',\r\n                                                                                marginTop: '1.5rem',\r\n                                                                                marginBottom: '1.5rem'\r\n                                                                            }}>\r\n                                                                            Choose your category\r\n                                                                        </header>\r\n\r\n\r\n                                                                            <div className=\"grid grid-cols-2 gap-6 mt-6 \"\r\n                                                                                style={{\r\n                                                                                    marginTop: '5rem',\r\n                                                                                    marginBottom: '5rem'\r\n                                                                                }}\r\n\r\n                                                                            >\r\n                                                                                {/* category tiles */}\r\n\r\n                                                                                <Button\r\n                                                                                    id='1'\r\n                                                                                    text='General Knowledge'\r\n                                                                                    bg={'#9483bd'}\r\n                                                                                    onClick={clickEvent} />\r\n\r\n                                                                                <Button\r\n                                                                                    id='2'\r\n                                                                                    text='Ecology'\r\n                                                                                    bg={'#e79995'}\r\n                                                                                    onClick={clickEvent} />\r\n\r\n                                                                                <Button\r\n                                                                                    id='3'\r\n                                                                                    text='Computer Science'\r\n                                                                                    bg={'#98d5ca'}\r\n                                                                                    onClick={clickEvent} />\r\n\r\n                                                                                <Button\r\n                                                                                    id='4'\r\n                                                                                    text='Maths'\r\n                                                                                    bg={'#9acaed'}\r\n                                                                                    onClick={clickEvent} />\r\n\r\n                                                                                <Button\r\n                                                                                    id='5'\r\n                                                                                    bg={'#98d099'}\r\n                                                                                    text='Geographical Science'\r\n                                                                                    onClick={clickEvent} />\r\n\r\n                                                                                <Button\r\n                                                                                    id='6'\r\n                                                                                    text='History'\r\n                                                                                    bg={'#e8ce4f'}\r\n                                                                                    onClick={clickEvent} />\r\n\r\n                                                                                <Button\r\n                                                                                    id='7'\r\n                                                                                    text='Sports'\r\n                                                                                    bg={'#e7e5e3'}\r\n                                                                                    onClick={clickEvent} />\r\n\r\n                                                                                <Button\r\n                                                                                    id='8'\r\n                                                                                    text='Ancient Mythology'\r\n                                                                                    bg={'#e769bb'}\r\n                                                                                    onClick={clickEvent} />\r\n\r\n                                                                                <Button\r\n                                                                                    // id='10'\r\n                                                                                    id='9'\r\n                                                                                    text='Films and Series'\r\n                                                                                    bg={'#e79995'}\r\n                                                                                    onClick={clickEvent} />\r\n\r\n                                                                                <Button\r\n                                                                                    id='10'\r\n                                                                                    text='Musicals'\r\n                                                                                    bg={'#98d5ca'}\r\n                                                                                    onClick={clickEvent} />\r\n\r\n                                                                                <Button\r\n                                                                                    id='11'\r\n                                                                                    text='Video Games'\r\n                                                                                    bg={'#9acaed'}\r\n                                                                                    onClick={clickEvent} />\r\n\r\n                                                                                <Button\r\n                                                                                    id='12'\r\n                                                                                    text='Books and Novels'\r\n                                                                                    bg={'#9483bd'}\r\n                                                                                    onClick={clickEvent} />\r\n\r\n                                                                                <Button\r\n                                                                                    id='13'\r\n                                                                                    bg={'#98d099'}\r\n                                                                                    text='Board Games'\r\n                                                                                    onClick={clickEvent} />\r\n\r\n                                                                                <Button\r\n                                                                                    id='14'\r\n                                                                                    text='Biological Science'\r\n                                                                                    bg={'#e8ce4f'}\r\n                                                                                    onClick={clickEvent} />\r\n\r\n                                                                                <Button\r\n                                                                                    id='15'\r\n                                                                                    text='Comics'\r\n                                                                                    bg={'#e7e5e3'}\r\n                                                                                    onClick={clickEvent} />\r\n\r\n\r\n                                                                                <Button\r\n                                                                                    id='16'\r\n                                                                                    text='Cartoons and Anime'\r\n                                                                                    bg={'#e769bb'}\r\n                                                                                    onClick={clickEvent} />\r\n\r\n                                                                            </div>\r\n                                                                        </>\r\n                                                                    )\r\n        )\r\n    )\r\n\r\n}\r\nexport default Categories;\r\n","import React, { useRef, useState, useContext } from 'react'\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\n// import { useAuth } from '../contexts/AuthContexts'\r\nimport { GlobalContext } from '../contexts/GlobalContext'\r\nimport './Sign_up.css'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n\r\nexport default function UpdateProfile() {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const confirmpasswordRef = useRef()\r\n    const { currentUser, updatePassword, updateEmail } = useContext(GlobalContext)\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if (passwordRef.current.value !==\r\n            confirmpasswordRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises = []\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n\r\n        Promise.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch(() => {\r\n            setError('Failed to Update Account')\r\n        }).finally(() => {\r\n            setLoading(\"false\")\r\n        })\r\n    }\r\n\r\n    const formStyle = {\r\n        padding: '0.5rem 0.5rem',\r\n        marginTop: '0.5rem',\r\n        marginBottom: '0.5rem',\r\n        border: '1px solid black',\r\n        borderRadius: 10,\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <img className=\"logo\" alt=\"Social Vue\" src=\"https://raw.githubusercontent.com/abishekvelavan/Online-quiz-application/main/quizoid%20logo%404x-8.png\" />\r\n            <Card className=\"topcon\">\r\n                <Card.Body >\r\n                    {/* className=\"containerX\" */}\r\n                    <h1>Update Profile</h1>\r\n                    {error && <Alert variant=\"danger\"> {error} </Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Control className=\"form-top\" style={formStyle} type=\"email\" ref={emailRef} required placeholder=\"Email\" defaultValue={currentUser.email} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Control className=\"form-mid\" style={formStyle} type=\"password\" ref={passwordRef} placeholder=\"Enter new Password\" />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"confirmpassword\">\r\n                            <Form.Control className=\"form-end\" style={formStyle} type=\"password\" ref={confirmpasswordRef} placeholder=\"Confirm Password\" />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"btn\" type=\"submit\">Update</Button>\r\n                    </Form>\r\n                    <div className=\"foot\">\r\n                        <Link to=\"/\" className=\"links\">Cancel</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\n// import { useAuth } from '../contexts/AuthContexts'\r\nimport './Sign_up.css'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { GlobalContext } from '../contexts/GlobalContext'\r\n\r\nexport default function Signup() {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const confirmpasswordRef = useRef()\r\n    const { signup } = useContext(GlobalContext)\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !==\r\n            confirmpasswordRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to Create an Account')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    const formStyle = {\r\n        padding: '0.5rem 0.5rem',\r\n        marginTop: '0.5rem',\r\n        marginBottom: '0.5rem',\r\n        border: '1px solid black',\r\n        borderRadius: 10,\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <img className=\"logo\" alt=\"Social Vue\" src=\"https://raw.githubusercontent.com/abishekvelavan/Online-quiz-application/main/quizoid%20logo%404x-8.png\" />\r\n            <Card className=\"topcon\">\r\n                <Card.Body >\r\n                    <h1>Sign Up</h1>\r\n                    {error && <Alert variant=\"danger\"> {error} </Alert>}\r\n                    <Form id=\"signup-form\" onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"signup-email\">\r\n                            <Form.Control className=\"form-top\" style={formStyle} type=\"email\" ref={emailRef} required placeholder=\"Email\" />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Control className=\"form-mid\" type=\"password\" style={formStyle} ref={passwordRef} placeholder=\"Password\"\r\n                                pattern=\"(?=.*\\d)(?=.[a-z])(?=.[A-z]).{8,}\"\r\n                                title=\"Must contain at least one number[0-9] and one uppercase[A-Z] and lowercase[a-b] letter,and atleast 8 or more character\"\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"confirmpassword\">\r\n                            <Form.Control className=\"form-end\" type=\"password\" style={formStyle} ref={confirmpasswordRef} required placeholder=\"Confirm Password\" />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"btn\" type=\"submit\">Sign Up</Button>\r\n                    </Form>\r\n                    <div className=\"foot\">\r\n                        Already have an account? <Link to=\"/login\" className=\"links\">Log In</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}","import React, { useContext, useRef, useState } from 'react'\r\nimport { Form, Button, Card } from \"react-bootstrap\"\r\n// import { useAuth } from '../contexts/AuthContexts'\r\nimport './Sign_up.css'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { GlobalContext } from '../contexts/GlobalContext'\r\n\r\nexport default function Login() {\r\n\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useContext(GlobalContext)\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to log in')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    const formStyle = {\r\n        padding: '0.5rem 0.5rem',\r\n        marginTop: '0.5rem',\r\n        marginBottom: '0.5rem',\r\n        border: '1px solid black',\r\n        borderRadius: 10,\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <img className=\"logo\" alt=\"Social Vue\" src=\"https://raw.githubusercontent.com/abishekvelavan/Online-quiz-application/main/quizoid%20logo%404x-8.png\" />\r\n\r\n            <Card className=\"topcon\">\r\n                <Card.Body>\r\n                    {/* class=\"containerX\" */}\r\n                    <h1>Log In</h1>\r\n                    {/* {error && <Alert variant=\"danger\"> {error}  </Alert>} */}\r\n\r\n                    {error && <h4 className='text-red-500 bg-red-300 p-1 rounded-mt border-red-800 rounded'>{error}</h4>}\r\n\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\" >\r\n                            <Form.Control style={formStyle} className=\"form-top\" type=\"email\" ref={emailRef} required placeholder=\"Email\" />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Control style={formStyle} className=\"form-end\" classNAme=\"input\" type=\"password\" ref={passwordRef} required placeholder=\"Password\" />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"btn\" type=\"submit\">Log In</Button>\r\n                    </Form>\r\n\r\n                    <div className=\"foot\">\r\n                        <Link className=\"links\" to=\"/forgot-password\">Forgot Password? </Link>\r\n                    </div>\r\n\r\n                    <div className=\"foot\">\r\n                        Need an account? <Link to=\"/signup\" className=\"links\">Sign Up</Link>\r\n                    </div>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}","import React, { useRef, useState, useContext } from 'react'\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\n// import { useAuth } from '../contexts/AuthContexts'\r\nimport { GlobalContext } from '../contexts/GlobalContext'\r\nimport './Sign_up.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function ForgotPassword() {\r\n\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useContext(GlobalContext)\r\n    const [error, setError] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check Your Inbox for further Instructions')\r\n        } catch {\r\n            setError('Failed to Reset Password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <img className=\"logo\" alt=\"Social Vue\" src=\"https://raw.githubusercontent.com/abishekvelavan/Online-quiz-application/main/quizoid%20logo%404x-8.png\" />\r\n            <Card className=\"topcon\">\r\n                <Card.Body >\r\n                    <h1>Password Reset</h1>\r\n                    {error && <Alert variant=\"danger\"> {error} </Alert>}\r\n                    {message && <Alert variant=\"sucess\"> {message} </Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Control className=\"form-solo\" type=\"email\" ref={emailRef} required placeholder=\"Email\" />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"btn\" type=\"submit\">\r\n                            Reset Password\r\n                        </Button>\r\n                    </Form>\r\n                    <div className=\"foot\">\r\n                        <Link className=\"links\" to=\"/login\">Log In? </Link>\r\n                    </div>\r\n                    <div className=\"foot\">\r\n                        Need an account? <Link to=\"/signup\" className=\"links\">Sign Up</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from './components/Authentication/PrivateRoute';\nimport Dashboard from './components/Authentication/Dashboard';\nimport ChooseLeaderBoard from './components/Quiz/ChooseLeaderBoard';\nimport Categories from './components/Quiz/Categories';\nimport UpdateProfile from './components/Authentication/UpdateProfile';\nimport Signup from './components/Authentication/Signup';\nimport Login from './components/Authentication/Login';\nimport ForgotPassword from './components/Authentication/ForgotPassword';\nimport { GlobalProvider } from './components/contexts/GlobalContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//const API_URL = 'https://opentdb.com/api.php?amount=10&category=9&type=multiple';\n\nfunction App() {\n\n  return (\n    <GlobalProvider>\n      <BrowserRouter>\n        <Switch>\n\n          {/* <Route path='/' exact component={Categories} /> */}\n          <PrivateRoute exact path=\"/\" component={Dashboard} />\n          <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/forgot-password\" component={ForgotPassword} />\n          <Route path='/ChooseLeaderBoard' exact component={ChooseLeaderBoard} />\n          <Route path='/Categories' exact component={Categories} />\n          {/* <Categories /> */}\n\n        </Switch>\n      </BrowserRouter>\n    </GlobalProvider>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './components/Authentication/Sign_up.css'\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}